digraph "DATA_EXEC/Dofloo-SyscallParty_noAster.dot" {
rankdir="LR"
size="9"
fixedsize="false"
splines="true"
nodesep=0.3
ranksep=0
fontsize=10
overlap="scalexy"
engine= "neato"
	"'a bot which is spread by brute forcing *SSH daemons and exploiting IoT devices using an array of exploits'" [node_type=file shape=ellipse]
	"'As the title suggests'" [node_type=file shape=ellipse]
	"As the title suggests" -> "a bot which is spread by brute forcing *SSH daemons and exploiting IoT devices using an array of exploits" [label="1: be"]
	"'a bot which is spread by brute forcing *SSH daemons and exploiting IoT devices using an array of exploits'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "a bot which is spread by brute forcing *SSH daemons and exploiting IoT devices using an array of exploits" [label="2: be"]
	"'by brute forcing *SSH daemons and exploiting IoT devices using an array of exploits'" [node_type=file shape=ellipse]
	"'a bot'" [node_type=file shape=ellipse]
	"a bot" -> "by brute forcing *SSH daemons and exploiting IoT devices using an array of exploits" [label="3: spread"]
	"'*SSH daemons'" [node_type=file shape=ellipse]
	"'brute'" [node_type=file shape=ellipse]
	brute -> "*SSH daemons" [label="4: force"]
	"'by a Chinese actor who is familiar with C++ and C constructs'" [node_type=file shape=ellipse]
	"'this malware'" [node_type=file shape=ellipse]
	"this malware" -> "by a Chinese actor who is familiar with C++ and C constructs" [label="7: distribute"]
	"'by a Chinese actor who is familiar with C++ and C constructs'" [node_type=file shape=ellipse]
	"'mainly'" [node_type=file shape=ellipse]
	mainly -> "by a Chinese actor who is familiar with C++ and C constructs" [label="8: distribute"]
	"'familiar with C++ and C constructs'" [node_type=file shape=ellipse]
	"'a Chinese actor'" [node_type=file shape=ellipse]
	"a Chinese actor" -> "familiar with C++ and C constructs" [label="9: be"]
	"'familiar with C++ and C constructs'" [node_type=file shape=ellipse]
	"'who'" [node_type=file shape=ellipse]
	who -> "familiar with C++ and C constructs" [label="10: be"]
	"'to using the std::string class in C++'" [node_type=file shape=ellipse]
	"'the knowledge of C++ by this threat actor'" [node_type=file shape=ellipse]
	"the knowledge of C++ by this threat actor" -> "to using the std":"":string class in C++ [label="13: extend"]
	"'to using the std::string class in C++'" [node_type=file shape=ellipse]
	"'only'" [node_type=file shape=ellipse]
	only -> "to using the std":"":string class in C++ [label="14: extend"]
	"'a few years ago'" [node_type=file shape=ellipse]
	"'This bot'" [node_type=file shape=ellipse]
	"This bot" -> "a few years ago" [label="15: distribute"]
	"'just for x86_64 targets'" [node_type=file shape=ellipse]
	"'This bot'" [node_type=file shape=ellipse]
	"This bot" -> "just for x86_64 targets" [label="16: distribute"]
	"'along with some key fundementals of This bot'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "along with some key fundementals of This bot" [label="17: change"]
	"'to target embedded systems'" [node_type=file shape=ellipse]
	"'This bot'" [node_type=file shape=ellipse]
	"This bot" -> "to target embedded systems" [label="18: start"]
	"'which is why I thought I would cover This bot again'" [node_type=file shape=ellipse]
	"'This bot'" [node_type=file shape=ellipse]
	"This bot" -> "which is why I thought I would cover This bot again" [label="19: start"]
	"'This bot'" [node_type=Process shape=box]
	"'embedded systems'" [node_type=Process shape=box]
	"'This bot'" -> "'embedded systems'" [label="20: fork"]
	"'This bot'" [node_type=Process shape=box]
	".*\embedded systems" [node_type=File shape=ellipse]
	"'This bot'" -> ".*\embedded systems" [label="20: exec"]
	"'why I thought I would cover This bot again'" [node_type=file shape=ellipse]
	"'which'" [node_type=file shape=ellipse]
	which -> "why I thought I would cover This bot again" [label="21: be"]
	"'I would cover This bot again'" [node_type=file shape=ellipse]
	"'why'" [node_type=file shape=ellipse]
	why -> "I would cover This bot again" [label="22: think"]
	"'I would cover This bot again'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> "I would cover This bot again" [label="23: think"]
	"'This bot'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> "This bot" [label="24: cover"]
	"'in C++'" [node_type=file shape=ellipse]
	"'Linux / AES.DDoS'" [node_type=file shape=ellipse]
	"Linux / AES.DDoS" -> "in C++" [label="25: program"]
	"'this'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> this [label="26: see"]
	"'due to the fact that all of the symbols are exported and C++ constructs are used'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "due to the fact that all of the symbols are exported and C++ constructs are used" [label="27: see"]
	"'We'" [node_type=Process shape=box]
	"'BinaryNinja : https://binary.ninja/ ltrace : https://linux.die.net/man/1/ltrace radare2 :'" [node_type=Process shape=box]
	"'We'" -> "'BinaryNinja ":" https"://binary.ninja/ ltrace : https://linux.die.net/man/1/ltrace radare2 :' [label="28: fork"]
	"'We'" [node_type=Process shape=box]
	".*\BinaryNinja : https://binary.ninja/ ltrace : https://linux.die.net/man/1/ltrace radare2 :" [node_type=File shape=ellipse]
	"'We'" -> ".*\BinaryNinja ":" https"://binary.ninja/ ltrace : https://linux.die.net/man/1/ltrace radare2 : [label="28: exec"]
	"'We'" [node_type=Process shape=box]
	"'A'" [node_type=Process shape=box]
	"'We'" -> "'A'" [label="29: fork"]
	"'We'" [node_type=Process shape=box]
	".*\A" [node_type=File shape=ellipse]
	"'We'" -> ".*\A" [label="29: exec"]
	"'https://linux.die.net/man/1/ltrace'" [node_type=file shape=ellipse]
	"'https://binary.ninja/'" [node_type=file shape=ellipse]
	https:"//binary.ninja/" -> https:"//linux.die.net/man/1/ltrace" [label="30: ltrace"]
	"'we'" [node_type=Process shape=box]
	"'â\x80\x98fileâ\x80\x99'" [node_type=Process shape=box]
	"'we'" -> "'â\x80\x98fileâ\x80\x99'" [label="31: fork"]
	"'we'" [node_type=Process shape=box]
	".*\âfileâ" [node_type=File shape=ellipse]
	"'we'" -> ".*\âfileâ" [label="31: exec"]
	"'we'" [node_type=Process shape=box]
	"'on the executable'" [node_type=Process shape=box]
	"'we'" -> "'on the executable'" [label="32: fork"]
	"'we'" [node_type=Process shape=box]
	".*\on the executable" [node_type=File shape=ellipse]
	"'we'" -> ".*\on the executable" [label="32: exec"]
	"'ELF 32-bit LSB executable , ARM , EABI5 version 1 ( SYSV ) , statically linked , for GNU / Linux 2.6.14 , not stripped'" [node_type=file shape=diamond]
	"'If we run â\x80\x98fileâ\x80\x99 on the executable'" [node_type=Process shape=box]
	"'ELF 32-bit LSB executable , ARM , EABI5 version 1 ( SYSV ) , statically linked , for GNU / Linux 2.6.14 , not stripped'" -> "'If we run â\x80\x98fileâ\x80\x99 on the executable'" [label="33: receive"]
	"'ELF 32-bit LSB executable , ARM , EABI5 version 1 ( SYSV ) , statically linked , for GNU / Linux 2.6.14 , not stripped'" [node_type=file shape=diamond]
	"'we'" [node_type=Process shape=box]
	"'ELF 32-bit LSB executable , ARM , EABI5 version 1 ( SYSV ) , statically linked , for GNU / Linux 2.6.14 , not stripped'" -> "'we'" [label="34: receive"]
	"'for GNU / Linux 2.6.14'" [node_type=file shape=ellipse]
	"'ELF 32-bit LSB executable , ARM , EABI5 version 1 ( SYSV )'" [node_type=file shape=ellipse]
	"ELF 32-bit LSB executable , ARM , EABI5 version 1 ( SYSV )" -> "for GNU / Linux 2.6.14" [label="35: link"]
	"'for GNU / Linux 2.6.14'" [node_type=file shape=ellipse]
	"'statically'" [node_type=file shape=ellipse]
	statically -> "for GNU / Linux 2.6.14" [label="36: link"]
	"'with an ELF ( which is the COFF for UNIX systems ) and itâ\x80\x99s 32 bit'" [node_type=file shape=ellipse]
	"'So'" [node_type=file shape=ellipse]
	So -> "with an ELF ( which is the COFF for UNIX systems ) and itâ\x80\x99s 32 bit" [label="37: work"]
	"'the COFF for UNIX systems'" [node_type=file shape=ellipse]
	"'which'" [node_type=file shape=ellipse]
	which -> "the COFF for UNIX systems" [label="38: be"]
	"'of type ARM'" [node_type=file shape=ellipse]
	"'Itâ\x80\x99s architecture'" [node_type=file shape=ellipse]
	"Itâ\x80\x99s architecture" -> "of type ARM" [label="39: be"]
	"'Itâ\x80\x99s architecture libc linked as many systems will have incomplete or sometimes even broken libraries'" [node_type=file shape=ellipse]
	"'an IoT bot'" [node_type=file shape=ellipse]
	"an IoT bot" -> "Itâ\x80\x99s architecture libc linked as many systems will have incomplete or sometimes even broken libraries" [label="42: have"]
	"'incomplete or sometimes even broken libraries'" [node_type=file shape=ellipse]
	"'many systems'" [node_type=file shape=ellipse]
	"many systems" -> "incomplete or sometimes even broken libraries" [label="43: have"]
	"'the executable'" [node_type=file shape=ellipse]
	"'dynamically'" [node_type=file shape=ellipse]
	dynamically -> "the executable" [label="44: link"]
	"'that the analysis will be a lot easier as we have meaningful names in relation to objects in the executable'" [node_type=file shape=ellipse]
	"'Since Itâ\x80\x99s architecture not stripped'" [node_type=file shape=ellipse]
	"Since Itâ\x80\x99s architecture not stripped" -> "that the analysis will be a lot easier as we have meaningful names in relation to objects in the executable" [label="47: mean"]
	"'that the analysis will be a lot easier as we have meaningful names in relation to objects in the executable'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "that the analysis will be a lot easier as we have meaningful names in relation to objects in the executable" [label="48: mean"]
	"'a lot easier'" [node_type=file shape=ellipse]
	"'the analysis'" [node_type=file shape=ellipse]
	"the analysis" -> "a lot easier" [label="49: be"]
	"'as we have meaningful names in relation to objects in the executable'" [node_type=file shape=ellipse]
	"'the analysis'" [node_type=file shape=ellipse]
	"the analysis" -> "as we have meaningful names in relation to objects in the executable" [label="50: be"]
	"'meaningful names'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "meaningful names" [label="51: have"]
	"'in relation to objects in the executable'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "in relation to objects in the executable" [label="52: have"]
	"'on a 12 year old version of the Linux kernel'" [node_type=file shape=ellipse]
	"'For some strange reason'" [node_type=file shape=ellipse]
	"For some strange reason" -> "on a 12 year old version of the Linux kernel" [label="53: compile"]
	"'on a 12 year old version of the Linux kernel'" [node_type=file shape=ellipse]
	"'the executable'" [node_type=file shape=ellipse]
	"the executable" -> "on a 12 year old version of the Linux kernel" [label="54: compile"]
	"'to us'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "to us" [label="55: indicate"]
	"'that the malware was compiled on an IoT device or just has an extremely old computer'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "that the malware was compiled on an IoT device or just has an extremely old computer" [label="56: indicate"]
	"'on an IoT device'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "on an IoT device" [label="57: compile"]
	"'an extremely old computer'" [node_type=file shape=ellipse]
	"'just'" [node_type=file shape=ellipse]
	just -> "an extremely old computer" [label="58: have"]
	"'32 bit by design'" [node_type=file shape=ellipse]
	"'A quick rundown on ARM ARM'" [node_type=file shape=ellipse]
	"A quick rundown on ARM ARM" -> "32 bit by design" [label="59: be"]
	"'32 bit wide'" [node_type=file shape=ellipse]
	"'all of us registers'" [node_type=file shape=ellipse]
	"all of us registers" -> "32 bit wide" [label="60: be"]
	"'standard'" [node_type=Process shape=box]
	"'convention'" [node_type=Process shape=box]
	"'standard'" -> "'convention'" [label="61: fork"]
	"'standard'" [node_type=Process shape=box]
	".*\convention" [node_type=File shape=ellipse]
	"'standard'" -> ".*\convention" [label="61: exec"]
	"'to place the arguments into r0-r3'" [node_type=file shape=ellipse]
	"'In ARM ARM'" [node_type=file shape=ellipse]
	"In ARM ARM" -> "to place the arguments into r0-r3" [label="64: be"]
	"'to place the arguments into r0-r3'" [node_type=file shape=ellipse]
	"'the standard calling convention'" [node_type=file shape=ellipse]
	"the standard calling convention" -> "to place the arguments into r0-r3" [label="65: be"]
	"'only four registers'" [node_type=file shape=ellipse]
	"'That'" [node_type=file shape=ellipse]
	That -> "only four registers" [label="66: 's"]
	"'though , if there are more than three arguments then we place the rest of the arguments on the stack'" [node_type=file shape=ellipse]
	"'That'" [node_type=file shape=ellipse]
	That -> "though , if there are more than three arguments then we place the rest of the arguments on the stack" [label="67: 's"]
	"'the rest of the arguments'" [node_type=file shape=ellipse]
	"'if there are more than three arguments'" [node_type=Process shape=box]
	"'if there are more than three arguments'" -> "'the rest of the arguments'" [label="68: write"]
	"'on the stack'" [node_type=file shape=ellipse]
	"'if there are more than three arguments'" [node_type=Process shape=box]
	"'if there are more than three arguments'" -> "'on the stack'" [label="69: write"]
	"'the rest of the arguments'" [node_type=file shape=ellipse]
	"'we'" [node_type=Process shape=box]
	"'we'" -> "'the rest of the arguments'" [label="70: write"]
	"'on the stack'" [node_type=file shape=ellipse]
	"'we'" [node_type=Process shape=box]
	"'we'" -> "'on the stack'" [label="71: write"]
	"'15 registers to play with'" [node_type=file shape=ellipse]
	"'us'" [node_type=file shape=ellipse]
	us -> "15 registers to play with" [label="72: have"]
	"'though'" [node_type=file shape=ellipse]
	"'us'" [node_type=file shape=ellipse]
	us -> though [label="73: have"]
	"'a special purpose'" [node_type=file shape=ellipse]
	"'they all'" [node_type=file shape=ellipse]
	"they all" -> "a special purpose" [label="74: serve"]
	"'r0 , r1 , r2 , r3'" [node_type=Process shape=box]
	"'for passing arguments'" [node_type=Process shape=box]
	"'r0 , r1 , r2 , r3'" -> "'for passing arguments'" [label="75: fork"]
	"'r0 , r1 , r2 , r3'" [node_type=Process shape=box]
	".*\for passing arguments" [node_type=File shape=ellipse]
	"'r0 , r1 , r2 , r3'" -> ".*\for passing arguments" [label="75: exec"]
	"'the return value of routines'" [node_type=file shape=ellipse]
	"'r0'" [node_type=file shape=ellipse]
	r0 -> "the return value of routines" [label="76: hold"]
	"'r4 , r5 , r6 , r7 , r8 , r9'" [node_type=Process shape=box]
	"'within routines'" [node_type=Process shape=box]
	"'r4 , r5 , r6 , r7 , r8 , r9'" -> "'within routines'" [label="77: fork"]
	"'r4 , r5 , r6 , r7 , r8 , r9'" [node_type=Process shape=box]
	".*\within routines" [node_type=File shape=ellipse]
	"'r4 , r5 , r6 , r7 , r8 , r9'" -> ".*\within routines" [label="77: exec"]
	"'r4 , r5 , r6 , r7 , r8 , r9'" [node_type=Process shape=box]
	"'to store variables'" [node_type=Process shape=box]
	"'r4 , r5 , r6 , r7 , r8 , r9'" -> "'to store variables'" [label="78: fork"]
	"'r4 , r5 , r6 , r7 , r8 , r9'" [node_type=Process shape=box]
	".*\to store variables" [node_type=File shape=ellipse]
	"'r4 , r5 , r6 , r7 , r8 , r9'" -> ".*\to store variables" [label="78: exec"]
	"'the limit for the current stack'" [node_type=file shape=ellipse]
	"'r10'" [node_type=file shape=ellipse]
	r10 -> "the limit for the current stack" [label="79: hold"]
	"'the stack frame pointer'" [node_type=file shape=ellipse]
	"'r11'" [node_type=file shape=ellipse]
	r11 -> "the stack frame pointer" [label="80: hold"]
	"'r12'" [node_type=Process shape=box]
	"'as a variable'" [node_type=Process shape=box]
	"'r12'" -> "'as a variable'" [label="81: fork"]
	"'r12'" [node_type=Process shape=box]
	".*\as a variable" [node_type=File shape=ellipse]
	"'r12'" -> ".*\as a variable" [label="81: exec"]
	"'r12'" [node_type=Process shape=box]
	"'within routines'" [node_type=Process shape=box]
	"'r12'" -> "'within routines'" [label="82: fork"]
	"'r12'" [node_type=Process shape=box]
	".*\within routines" [node_type=File shape=ellipse]
	"'r12'" -> ".*\within routines" [label="82: exec"]
	"'r12'" [node_type=Process shape=box]
	"'however there is no guarantee that this register will remain unchanged by the caller'" [node_type=Process shape=box]
	"'r12'" -> "'however there is no guarantee that this register will remain unchanged by the caller'" [label="83: fork"]
	"'r12'" [node_type=Process shape=box]
	".*\however there is no guarantee that this register will remain unchanged by the caller" [node_type=File shape=ellipse]
	"'r12'" -> ".*\however there is no guarantee that this register will remain unchanged by the caller" [label="83: exec"]
	"'unchanged'" [node_type=file shape=ellipse]
	"'this register'" [node_type=file shape=ellipse]
	"this register" -> unchanged [label="86: remain"]
	"'by the caller'" [node_type=file shape=ellipse]
	"'this register'" [node_type=file shape=ellipse]
	"this register" -> "by the caller" [label="87: remain"]
	"'the stack pointer ( SP )'" [node_type=file shape=ellipse]
	"'r13'" [node_type=file shape=ellipse]
	r13 -> "the stack pointer ( SP )" [label="88: hold"]
	"'back to the caller'" [node_type=file shape=ellipse]
	"'the link register'" [node_type=file shape=ellipse]
	"the link register" -> "back to the caller" [label="89: point"]
	"'the program counter'" [node_type=file shape=ellipse]
	"'r15'" [node_type=file shape=ellipse]
	r15 -> "the program counter" [label="90: hold"]
	"'an ARM expert'" [node_type=file shape=ellipse]
	"'now'" [node_type=file shape=ellipse]
	now -> "an ARM expert" [label="91: 're"]
	"'an ARM expert'" [node_type=file shape=ellipse]
	"'you'" [node_type=file shape=ellipse]
	you -> "an ARM expert" [label="92: 're"]
	"'As soon as the malware boots from the original entry - point main which is at 0x13DEC'" [node_type=file shape=ellipse]
	"'Nice'" [node_type=file shape=ellipse]
	Nice -> "As soon as the malware boots from the original entry - point main which is at 0x13DEC" [label="93: continue"]
	"'As soon as the malware boots from the original entry - point main which is at 0x13DEC'" [node_type=file shape=ellipse]
	"'so'" [node_type=file shape=ellipse]
	so -> "As soon as the malware boots from the original entry - point main which is at 0x13DEC" [label="94: continue"]
	"'As soon as the malware boots from the original entry - point main which is at 0x13DEC'" [node_type=file shape=ellipse]
	"\"now you 're an ARM expert\"" [node_type=file shape=ellipse]
	"\"now you re an ARM expert\"" -> "As soon as the malware boots from the original entry - point main which is at 0x13DEC" [label="95: continue"]
	"'As soon as the malware boots from the original entry - point main which is at 0x13DEC'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "As soon as the malware boots from the original entry - point main which is at 0x13DEC" [label="96: continue"]
	"'into main'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "into main" [label="97: dive"]
	"'at 0x13DEC'" [node_type=file shape=ellipse]
	"'the original entry - point main'" [node_type=file shape=ellipse]
	"the original entry - point main" -> "at 0x13DEC" [label="98: be"]
	"'we'" [node_type=Process shape=box]
	"'rabin2'" [node_type=Process shape=box]
	"'we'" -> "'rabin2'" [label="99: fork"]
	"'we'" [node_type=Process shape=box]
	".*\rabin2" [node_type=File shape=ellipse]
	"'we'" -> ".*\rabin2" [label="99: exec"]
	"'we'" [node_type=Process shape=box]
	"'to find the original entry point by doing rabin2 -s kfts | grep \" type = FUNC name = main \"'" [node_type=Process shape=box]
	"'we'" -> "'to find the original entry point by doing rabin2 -s kfts | grep \" type = FUNC name = main \"'" [label="100: fork"]
	"'we'" [node_type=Process shape=box]
	".*\to find the original entry point by doing rabin2 -s kfts | grep \" type = FUNC name = main \"" [node_type=File shape=ellipse]
	"'we'" -> ".*\to find the original entry point by doing rabin2 -s kfts | grep \" type = FUNC name = main \"" [label="100: exec"]
	"'the original entry point'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "the original entry point" [label="101: find"]
	"'by doing rabin2 -s kfts | grep \" type = FUNC name = main \"'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "by doing rabin2 -s kfts | grep \" type = FUNC name = main \"" [label="102: find"]
	"'to function named get_executable_name which reads the symlink /proc / self / exe via readlink ( ..'" [node_type=file shape=ellipse]
	"'The main method'" [node_type=file shape=ellipse]
	"The main method" -> "to function named get_executable_name which reads the symlink /proc / self / exe via readlink ( .." [label="103: branch"]
	"'the symlink /proc / self / exe'" [node_type=file shape=ellipse]
	"'function named get_executable_name'" [node_type=Process shape=box]
	"'the symlink /proc / self / exe'" -> "'function named get_executable_name'" [label="104: 'read'"]
	"'via readlink ( ..'" [node_type=file shape=ellipse]
	"'function named get_executable_name'" [node_type=Process shape=box]
	"'via readlink ( ..'" -> "'function named get_executable_name'" [label="105: 'read'"]
	"'the symlink /proc / self / exe'" [node_type=file shape=ellipse]
	"'which'" [node_type=Process shape=box]
	"'the symlink /proc / self / exe'" -> "'which'" [label="106: 'read'"]
	"'via readlink ( .. ) internally'" [node_type=file shape=ellipse]
	"'which'" [node_type=Process shape=box]
	"'via readlink ( .. ) internally'" -> "'which'" [label="107: 'read'"]
	"'from we process'" [node_type=file shape=ellipse]
	"'which'" [node_type=Process shape=box]
	"'from we process'" -> "'which'" [label="108: 'read'"]
	"'to function named get_executable_name'" [node_type=file shape=ellipse]
	"'When reading The main method then branches to function named get_executable_name which reads the symlink /proc / self / exe via readlink ( .. ) internally from we process'" [node_type=file shape=ellipse]
	"When reading The main method then branches to function named get_executable_name which reads the symlink /proc / self / exe via readlink ( .. ) internally from we process" -> "to function named get_executable_name" [label="111: branch"]
	"'which reads the symlink /proc / self / exe'" [node_type=file shape=ellipse]
	"'When reading The main method then branches to function named get_executable_name which reads the symlink /proc / self / exe via readlink ( .. ) internally from we process'" [node_type=file shape=ellipse]
	"When reading The main method then branches to function named get_executable_name which reads the symlink /proc / self / exe via readlink ( .. ) internally from we process" -> "which reads the symlink /proc / self / exe" [label="112: branch"]
	"'to function named get_executable_name'" [node_type=file shape=ellipse]
	"'The main method'" [node_type=file shape=ellipse]
	"The main method" -> "to function named get_executable_name" [label="113: branch"]
	"'which reads the symlink /proc / self / exe'" [node_type=file shape=ellipse]
	"'The main method'" [node_type=file shape=ellipse]
	"The main method" -> "which reads the symlink /proc / self / exe" [label="114: branch"]
	"'the symlink /proc / self / exe'" [node_type=file shape=ellipse]
	"'named get_executable_name'" [node_type=Process shape=box]
	"'the symlink /proc / self / exe'" -> "'named get_executable_name'" [label="115: 'read'"]
	"'via readlink'" [node_type=file shape=ellipse]
	"'named get_executable_name'" [node_type=Process shape=box]
	"'via readlink'" -> "'named get_executable_name'" [label="116: 'read'"]
	"'the location'" [node_type=file shape=ellipse]
	"'The main method'" [node_type=file shape=ellipse]
	"The main method" -> "the location" [label="117: return"]
	"'from that we executable is running from'" [node_type=file shape=ellipse]
	"'The main method'" [node_type=file shape=ellipse]
	"The main method" -> "from that we executable is running from" [label="118: return"]
	"'we'" [node_type=Process shape=box]
	"'from'" [node_type=Process shape=box]
	"'we'" -> "'from'" [label="119: fork"]
	"'we'" [node_type=Process shape=box]
	".*\from" [node_type=File shape=ellipse]
	"'we'" -> ".*\from" [label="119: exec"]
	"'from the disassembly that we create a type of std::string and copy from the char array containing the path of The executable'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "from the disassembly that we create a type of std":"":string and copy from the char array containing the path of The executable [label="120: see"]
	"'a type of std::string'" [node_type=file shape=ellipse]
	"'the disassembly'" [node_type=Process shape=box]
	"'the disassembly'" -> "'a type of std":"":string' [label="121: write"]
	"'a type of std::string'" [node_type=file shape=ellipse]
	"'we'" [node_type=Process shape=box]
	"'we'" -> "'a type of std":"":string' [label="122: write"]
	"'the path of The executable'" [node_type=file shape=ellipse]
	"'the char array'" [node_type=file shape=ellipse]
	"the char array" -> "the path of The executable" [label="123: contain"]
	"'into the function used for persistence'" [node_type=file shape=ellipse]
	"'This'" [node_type=file shape=ellipse]
	This -> "into the function used for persistence" [label="124: pass"]
	"'the function'" [node_type=Process shape=box]
	"'for persistence'" [node_type=Process shape=box]
	"'the function'" -> "'for persistence'" [label="125: fork"]
	"'the function'" [node_type=Process shape=box]
	".*\for persistence" [node_type=File shape=ellipse]
	"'the function'" -> ".*\for persistence" [label="125: exec"]
	"'if weâ\x80\x99re running or add to startup'" [node_type=file shape=ellipse]
	"'We'" [node_type=Process shape=box]
	"'if weâ\x80\x99re running or add to startup'" -> "'We'" [label="126: 'read'"]
	"'to startup'" [node_type=file shape=ellipse]
	"'We'" [node_type=Process shape=box]
	"'We'" -> "'to startup'" [label="127: write"]
	"'a call to ps -e'" [node_type=file shape=ellipse]
	"'In the check_running procedure'" [node_type=file shape=ellipse]
	"In the check_running procedure" -> "a call to ps -e" [label="128: do"]
	"'a call to ps -e'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "a call to ps -e" [label="129: do"]
	"'for two seconds'" [node_type=file shape=ellipse]
	"'In the check_running procedure'" [node_type=file shape=ellipse]
	"In the check_running procedure" -> "for two seconds" [label="130: sleep"]
	"'for two seconds'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "for two seconds" [label="131: sleep"]
	"'the output'" [node_type=file shape=diamond]
	"'we'" [node_type=Process shape=box]
	"'the output'" -> "'we'" [label="132: receive"]
	"'from the command'" [node_type=file shape=diamond]
	"'we'" [node_type=Process shape=box]
	"'from the command'" -> "'we'" [label="133: receive"]
	"'to see if the current executable name exists in the output'" [node_type=file shape=ellipse]
	"'we'" [node_type=Process shape=box]
	"'to see if the current executable name exists in the output'" -> "'we'" [label="134: 'read'"]
	"'if the current executable name exists in the output'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "if the current executable name exists in the output" [label="135: see"]
	"'in the output'" [node_type=file shape=ellipse]
	"'the current executable name'" [node_type=file shape=ellipse]
	"the current executable name" -> "in the output" [label="136: exist"]
	"'to branch to exit with an exit code of 0 ( which is placed into r0 ) which will effectively shut - down the process'" [node_type=file shape=ellipse]
	"'If the current executable name exists in the output does'" [node_type=file shape=ellipse]
	"If the current executable name exists in the output does" -> "to branch to exit with an exit code of 0 ( which is placed into r0 ) which will effectively shut - down the process" [label="137: continue"]
	"'to branch to exit with an exit code of 0 ( which is placed into r0 ) which will effectively shut - down the process'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "to branch to exit with an exit code of 0 ( which is placed into r0 ) which will effectively shut - down the process" [label="138: continue"]
	"'to'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> to [label="139: branch"]
	"'with an exit code of 0 ( which is placed into r0 ) which will effectively shut - down the process'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "with an exit code of 0 ( which is placed into r0 ) which will effectively shut - down the process" [label="140: exit"]
	"'into r0'" [node_type=file shape=ellipse]
	"'an exit code of 0'" [node_type=Process shape=box]
	"'an exit code of 0'" -> "'into r0'" [label="141: write"]
	"'the process'" [node_type=file shape=ellipse]
	"'an exit code of 0 ( which is placed into r0 )'" [node_type=file shape=ellipse]
	"an exit code of 0 ( which is placed into r0 )" -> "the process" [label="144: shut"]
	"'the process'" [node_type=file shape=ellipse]
	"'effectively'" [node_type=file shape=ellipse]
	effectively -> "the process" [label="145: shut"]
	"'onto persistence'" [node_type=file shape=ellipse]
	"'If not'" [node_type=file shape=ellipse]
	"If not" -> "onto persistence" [label="146: go"]
	"'onto persistence'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "onto persistence" [label="147: go"]
	"'the process'" [node_type=file shape=ellipse]
	"'So'" [node_type=file shape=ellipse]
	So -> "the process" [label="158: exit"]
	"'the process'" [node_type=file shape=ellipse]
	"\"if we 're already running\"" [node_type=file shape=ellipse]
	"\"if we re already running\"" -> "the process" [label="159: exit"]
	"'the process'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "the process" [label="160: exit"]
	"'the process'" [node_type=file shape=ellipse]
	"'effectively'" [node_type=file shape=ellipse]
	effectively -> "the process" [label="161: exit"]
	"'persistence Persistence'" [node_type=file shape=ellipse]
	"'The malware'" [node_type=file shape=ellipse]
	"The malware" -> "persistence Persistence" [label="162: achieve"]
	"'before The malware overwrites this file The malware first checks to see if The malware has already which did so by adding to /etcThe /etc / rc.local'" [node_type=file shape=ellipse]
	"'The malware'" [node_type=file shape=ellipse]
	"The malware" -> "before The malware overwrites this file The malware first checks to see if The malware has already which did so by adding to /etcThe /etc / rc.local" [label="163: achieve"]
	"'this file'" [node_type=file shape=ellipse]
	"'The malware'" [node_type=file shape=ellipse]
	"The malware" -> "this file" [label="164: overwrite"]
	"'if The malware has already which did so by adding to /etcThe /etc / rc.local'" [node_type=file shape=ellipse]
	"'The malware'" [node_type=file shape=ellipse]
	"The malware" -> "if The malware has already which did so by adding to /etcThe /etc / rc.local" [label="165: see"]
	"'so'" [node_type=file shape=ellipse]
	"'The malware'" [node_type=file shape=ellipse]
	"The malware" -> so [label="166: do"]
	"'by adding to /etcThe /etc / rc.local'" [node_type=file shape=ellipse]
	"'The malware'" [node_type=file shape=ellipse]
	"The malware" -> "by adding to /etcThe /etc / rc.local" [label="167: do"]
	"'The /etc / rc.local'" [node_type=Process shape=box]
	"'certain commands'" [node_type=Process shape=box]
	"'The /etc / rc.local'" -> "'certain commands'" [label="168: fork"]
	"'The /etc / rc.local'" [node_type=Process shape=box]
	".*\certain commands" [node_type=File shape=ellipse]
	"'The /etc / rc.local'" -> ".*\certain commands" [label="168: exec"]
	"'The /etc / rc.local'" [node_type=Process shape=box]
	"\"after all of the systems ' services have started\"" [node_type=Process shape=box]
	"'The /etc / rc.local'" -> "\"after all of the systems ' services have started\"" [label="169: fork"]
	"'The /etc / rc.local'" [node_type=Process shape=box]
	".*\after all of the systems ' services have started" [node_type=File shape=ellipse]
	"'The /etc / rc.local'" -> ".*\after all of the systems ' services have started" [label="169: exec"]
	"'somewhat amateur'" [node_type=file shape=ellipse]
	"'The way that this is achieved'" [node_type=file shape=ellipse]
	"The way that this is achieved" -> "somewhat amateur" [label="171: be"]
	"'as the malware constructs a shell command and then uses the system function to execute them ( which in theory just calls the exec and hangs for a return code from the callee )'" [node_type=file shape=ellipse]
	"'The way that this is achieved'" [node_type=file shape=ellipse]
	"The way that this is achieved" -> "as the malware constructs a shell command and then uses the system function to execute them ( which in theory just calls the exec and hangs for a return code from the callee )" [label="172: be"]
	"'a shell command'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "a shell command" [label="173: construct"]
	"'the malware'" [node_type=Process shape=box]
	"'the system function'" [node_type=Process shape=box]
	"'the malware'" -> "'the system function'" [label="174: fork"]
	"'the malware'" [node_type=Process shape=box]
	".*\the system function" [node_type=File shape=ellipse]
	"'the malware'" -> ".*\the system function" [label="174: exec"]
	"'the malware'" [node_type=Process shape=box]
	"'to execute them'" [node_type=Process shape=box]
	"'the malware'" -> "'to execute them'" [label="175: fork"]
	"'the malware'" [node_type=Process shape=box]
	".*\to execute them" [node_type=File shape=ellipse]
	"'the malware'" -> ".*\to execute them" [label="175: exec"]
	"'the malware'" [node_type=Process shape=box]
	"'which in theory just calls the exec and hangs for a return'" [node_type=Process shape=box]
	"'the malware'" -> "'which in theory just calls the exec and hangs for a return'" [label="176: fork"]
	"'the malware'" [node_type=Process shape=box]
	".*\which in theory just calls the exec and hangs for a return" [node_type=File shape=ellipse]
	"'the malware'" -> ".*\which in theory just calls the exec and hangs for a return" [label="176: exec"]
	"'the malware'" [node_type=Process shape=box]
	"'code from the callee )'" [node_type=Process shape=box]
	"'the malware'" -> "'code from the callee )'" [label="177: fork"]
	"'the malware'" [node_type=Process shape=box]
	".*\code from the callee )" [node_type=File shape=ellipse]
	"'the malware'" -> ".*\code from the callee )" [label="177: exec"]
	"'the malware'" [node_type=Process shape=box]
	"'them'" [node_type=Process shape=box]
	"'the malware'" -> "'them'" [label="181: fork"]
	"'the malware'" [node_type=Process shape=box]
	".*\them" [node_type=File shape=ellipse]
	"'the malware'" -> ".*\them" [label="181: exec"]
	"'the system function to execute'" [node_type=Process shape=box]
	"'the exec'" [node_type=Process shape=box]
	"'the system function to execute'" -> "'the exec'" [label="194: fork"]
	"'the system function to execute'" [node_type=Process shape=box]
	".*\the exec" [node_type=File shape=ellipse]
	"'the system function to execute'" -> ".*\the exec" [label="194: exec"]
	"'them'" [node_type=Process shape=box]
	"'the exec'" [node_type=Process shape=box]
	"'them'" -> "'the exec'" [label="195: fork"]
	"'them'" [node_type=Process shape=box]
	".*\the exec" [node_type=File shape=ellipse]
	"'them'" -> ".*\the exec" [label="195: exec"]
	"'in theory'" [node_type=Process shape=box]
	"'the exec'" [node_type=Process shape=box]
	"'in theory'" -> "'the exec'" [label="196: fork"]
	"'in theory'" [node_type=Process shape=box]
	".*\the exec" [node_type=File shape=ellipse]
	"'in theory'" -> ".*\the exec" [label="196: exec"]
	"'just'" [node_type=Process shape=box]
	"'the exec'" [node_type=Process shape=box]
	"'just'" -> "'the exec'" [label="197: fork"]
	"'just'" [node_type=Process shape=box]
	".*\the exec" [node_type=File shape=ellipse]
	"'just'" -> ".*\the exec" [label="197: exec"]
	"'the sed program'" [node_type=Process shape=box]
	"'which writes to the file in question'" [node_type=Process shape=box]
	"'the sed program'" -> "'which writes to the file in question'" [label="198: fork"]
	"'the sed program'" [node_type=Process shape=box]
	".*\which writes to the file in question" [node_type=File shape=ellipse]
	"'the sed program'" -> ".*\which writes to the file in question" [label="198: exec"]
	"'to the file in question'" [node_type=file shape=ellipse]
	"'which'" [node_type=Process shape=box]
	"'which'" -> "'to the file in question'" [label="199: write"]
	"'for example'" [node_type=file shape=ellipse]
	"\"sed -i -e ' 2 i%s/%s ' /etc / rc.local\"" [node_type=file shape=ellipse]
	"\"sed -i -e  2 i%s/%s  /etc / rc.local\"" -> "for example" [label="200: format"]
	"'to system'" [node_type=file shape=ellipse]
	"'This'" [node_type=file shape=ellipse]
	This -> "to system" [label="201: pass"]
	"'as described above'" [node_type=file shape=ellipse]
	"'This'" [node_type=file shape=ellipse]
	This -> "as described above" [label="202: pass"]
	"'The buffer'" [node_type=Process shape=box]
	"'in all of these formatting operations'" [node_type=Process shape=box]
	"'The buffer'" -> "'in all of these formatting operations'" [label="203: fork"]
	"'The buffer'" [node_type=Process shape=box]
	".*\in all of these formatting operations" [node_type=File shape=ellipse]
	"'The buffer'" -> ".*\in all of these formatting operations" [label="203: exec"]
	"'at the virtual address 0x9F48'" [node_type=file shape=ellipse]
	"'The buffer used in all of these formatting operations'" [node_type=file shape=ellipse]
	"The buffer used in all of these formatting operations" -> "at the virtual address 0x9F48" [label="204: be"]
	"'a size of 300 bytes'" [node_type=file shape=ellipse]
	"'The buffer'" [node_type=file shape=ellipse]
	"The buffer" -> "a size of 300 bytes" [label="205: have"]
	"'the path that the malware resides in'" [node_type=file shape=ellipse]
	"'Technically'" [node_type=file shape=ellipse]
	Technically -> "the path that the malware resides in" [label="206: manipulate"]
	"'the path that the malware resides in'" [node_type=file shape=ellipse]
	"'since the input is un - sanitized'" [node_type=file shape=ellipse]
	"since the input is un - sanitized" -> "the path that the malware resides in" [label="207: manipulate"]
	"'the path that the malware resides in'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "the path that the malware resides in" [label="208: manipulate"]
	"'in'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> in [label="209: reside"]
	"'a format string exploit'" [node_type=file shape=ellipse]
	"'Technically'" [node_type=file shape=ellipse]
	Technically -> "a format string exploit" [label="210: utilise"]
	"'a format string exploit'" [node_type=file shape=ellipse]
	"'since the input is un - sanitized'" [node_type=file shape=ellipse]
	"since the input is un - sanitized" -> "a format string exploit" [label="211: utilise"]
	"'a format string exploit'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "a format string exploit" [label="212: utilise"]
	"'the stack'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "the stack" [label="215: manipulate"]
	"'the stack'" [node_type=file shape=ellipse]
	"'therefore'" [node_type=file shape=ellipse]
	therefore -> "the stack" [label="216: manipulate"]
	"'local variables'" [node_type=file shape=ellipse]
	"'We'" [node_type=Process shape=box]
	"'local variables'" -> "'We'" [label="219: 'read'"]
	"'local variables'" [node_type=file shape=ellipse]
	"'therefore'" [node_type=Process shape=box]
	"'local variables'" -> "'therefore'" [label="220: 'read'"]
	"'the only persistence method used by the bot'" [node_type=file shape=ellipse]
	"'This'" [node_type=file shape=ellipse]
	This -> "the only persistence method used by the bot" [label="221: be"]
	"'the only persistence method'" [node_type=Process shape=box]
	"'by the bot'" [node_type=Process shape=box]
	"'the only persistence method'" -> "'by the bot'" [label="222: fork"]
	"'the only persistence method'" [node_type=Process shape=box]
	".*\by the bot" [node_type=File shape=ellipse]
	"'the only persistence method'" -> ".*\by the bot" [label="222: exec"]
	"'Information harvesting'" [node_type=Process shape=box]
	"'Information harvesting'" [node_type=Process shape=box]
	"'Information harvesting'" -> "'Information harvesting'" [label="223: fork"]
	"'Information harvesting'" [node_type=Process shape=box]
	"'The process'" [node_type=Process shape=box]
	"'Information harvesting'" -> "'The process'" [label="224: fork"]
	"'The process'" [node_type=Process shape=box]
	"'Information harvesting'" [node_type=Process shape=box]
	"'The process'" -> "'Information harvesting'" [label="225: fork"]
	"'The process'" [node_type=Process shape=box]
	"'The process'" [node_type=Process shape=box]
	"'The process'" -> "'The process'" [label="226: fork"]
	"'away'" [node_type=file shape=ellipse]
	"'Information harvesting'" [node_type=file shape=ellipse]
	"Information harvesting" -> away [label="229: break"]
	"'from Information harvesting The process parent by calling setsid ( ..'" [node_type=file shape=ellipse]
	"'Information harvesting'" [node_type=file shape=ellipse]
	"Information harvesting" -> "from Information harvesting The process parent by calling setsid ( .." [label="230: break"]
	"'closed'" [node_type=file shape=ellipse]
	"'All of the file descriptors'" [node_type=file shape=ellipse]
	"All of the file descriptors" -> closed [label="231: be"]
	"'which are inherited from its parent ( 0 - 3 )'" [node_type=file shape=ellipse]
	"'All of the file descriptors'" [node_type=file shape=ellipse]
	"All of the file descriptors" -> "which are inherited from its parent ( 0 - 3 )" [label="232: be"]
	"'from its parent ( 0 - 3 )'" [node_type=file shape=ellipse]
	"'All of the file descriptors'" [node_type=file shape=ellipse]
	"All of the file descriptors" -> "from its parent ( 0 - 3 )" [label="233: inherit"]
	"'to call the SendInfo function which collects information such as the number of CPUs in the system ; the network speed ; the amount of load on the system CPUs ; the local address of the network adapter'" [node_type=file shape=ellipse]
	"'A thread'" [node_type=Process shape=box]
	"'A thread'" -> "'to call the SendInfo function which collects information such as the number of CPUs in the system ; the network speed ; the amount of load on the system CPUs ; the local address of the network adapter'" [label="234: write"]
	"'information such as the number of CPUs in the system'" [node_type=file shape=diamond]
	"'the SendInfo function'" [node_type=Process shape=box]
	"'information such as the number of CPUs in the system'" -> "'the SendInfo function'" [label="235: receive"]
	"'This routine'" [node_type=Process shape=box]
	"'the subroutine get_occupy'" [node_type=Process shape=box]
	"'This routine'" -> "'the subroutine get_occupy'" [label="236: fork"]
	"'This routine'" [node_type=Process shape=box]
	".*\the subroutine get_occupy" [node_type=File shape=ellipse]
	"'This routine'" -> ".*\the subroutine get_occupy" [label="236: exec"]
	"'that We calculate the load average by iterating over all the CPUs in the system'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "that We calculate the load average by iterating over all the CPUs in the system" [label="237: see"]
	"'the load average'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "the load average" [label="238: calculate"]
	"'by iterating over all the CPUs in the system'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "by iterating over all the CPUs in the system" [label="239: calculate"]
	"'over all the CPUs in the system'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "over all the CPUs in the system" [label="241: iterate"]
	"'that r3 is being used for the counter for this loop'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "that r3 is being used for the counter for this loop" [label="242: see"]
	"'r3'" [node_type=Process shape=box]
	"'for the counter for this loop'" [node_type=Process shape=box]
	"'r3'" -> "'for the counter for this loop'" [label="243: fork"]
	"'r3'" [node_type=Process shape=box]
	".*\for the counter for this loop" [node_type=File shape=ellipse]
	"'r3'" -> ".*\for the counter for this loop" [label="243: exec"]
	"'the blt instruction'" [node_type=Process shape=box]
	"'which branches if the first operand is less than the second'" [node_type=Process shape=box]
	"'the blt instruction'" -> "'which branches if the first operand is less than the second'" [label="244: fork"]
	"'the blt instruction'" [node_type=Process shape=box]
	".*\which branches if the first operand is less than the second" [node_type=File shape=ellipse]
	"'the blt instruction'" -> ".*\which branches if the first operand is less than the second" [label="244: exec"]
	"'less than the second'" [node_type=file shape=ellipse]
	"'the first operand'" [node_type=file shape=ellipse]
	"the first operand" -> "less than the second" [label="245: be"]
	"'the equivalent of jle'" [node_type=file shape=ellipse]
	"'In x86'" [node_type=file shape=ellipse]
	"In x86" -> "the equivalent of jle" [label="246: be"]
	"'the equivalent of jle'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "the equivalent of jle" [label="247: be"]
	"'in earlier versions of this malware a thread used to be created to backdoorA , however not anymore'" [node_type=file shape=ellipse]
	"'Please'" [node_type=file shape=ellipse]
	Please -> "in earlier versions of this malware a thread used to be created to backdoorA , however not anymore" [label="248: note"]
	"'to backdoorA'" [node_type=file shape=ellipse]
	"'a thread'" [node_type=Process shape=box]
	"'a thread'" -> "'to backdoorA'" [label="249: write"]
	"'information regarding the network adapter'" [node_type=file shape=diamond]
	"'The way'" [node_type=Process shape=box]
	"'information regarding the network adapter'" -> "'The way'" [label="250: receive"]
	"'information regarding the network adapter'" [node_type=file shape=diamond]
	"'the malware'" [node_type=Process shape=box]
	"'information regarding the network adapter'" -> "'the malware'" [label="251: receive"]
	"'the network adapter'" [node_type=file shape=ellipse]
	"'information'" [node_type=file shape=ellipse]
	information -> "the network adapter" [label="252: regard"]
	"'the /proc / net / dev file'" [node_type=file shape=ellipse]
	"'The way the malware gets information regarding the network adapter'" [node_type=Process shape=box]
	"'the /proc / net / dev file'" -> "'The way the malware gets information regarding the network adapter'" [label="253: 'read'"]
	"'to the start of the file'" [node_type=file shape=ellipse]
	"'the /proc / net / dev file'" [node_type=file shape=ellipse]
	"the /proc / net / dev file" -> "to the start of the file" [label="254: seek"]
	"'the /proc / net / dev file'" [node_type=file shape=ellipse]
	"'the /proc / net / dev file'" [node_type=file shape=ellipse]
	"the /proc / net / dev file" -> "the /proc / net / dev file" [label="255: parse"]
	"'to get the local IP address from the network adapter'" [node_type=file shape=ellipse]
	"'the /proc / net / dev file'" [node_type=file shape=ellipse]
	"the /proc / net / dev file" -> "to get the local IP address from the network adapter" [label="256: parse"]
	"'the local IP address'" [node_type=file shape=diamond]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'the local IP address'" -> "'the /proc / net / dev file'" [label="258: receive"]
	"'from the network adapter'" [node_type=file shape=diamond]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'from the network adapter'" -> "'the /proc / net / dev file'" [label="259: receive"]
	"'strange'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> strange [label="260: find"]
	"'about this sample of malware'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> "about this sample of malware" [label="261: find"]
	"'that the /proc / net / dev file created statistics which had no real meaning , for example the /proc / net / dev file would create a random value and use the /proc / net / dev file as the network speed'" [node_type=file shape=ellipse]
	"'What I found strange about this sample of malware'" [node_type=file shape=ellipse]
	"What I found strange about this sample of malware" -> "that the /proc / net / dev file created statistics which had no real meaning , for example the /proc / net / dev file would create a random value and use the /proc / net / dev file as the network speed" [label="262: be"]
	"'statistics which had no real meaning , for example the /proc / net / dev file would create a random value and use the /proc / net / dev file as the network speed'" [node_type=file shape=ellipse]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'the /proc / net / dev file'" -> "'statistics which had no real meaning , for example the /proc / net / dev file would create a random value and use the /proc / net / dev file as the network speed'" [label="263: write"]
	"'no real meaning'" [node_type=file shape=ellipse]
	"'statistics'" [node_type=file shape=ellipse]
	statistics -> "no real meaning" [label="264: have"]
	"'a random value'" [node_type=file shape=ellipse]
	"'for example'" [node_type=Process shape=box]
	"'for example'" -> "'a random value'" [label="267: write"]
	"'a random value'" [node_type=file shape=ellipse]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'the /proc / net / dev file'" -> "'a random value'" [label="268: write"]
	"'for example'" [node_type=Process shape=box]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'for example'" -> "'the /proc / net / dev file'" [label="272: fork"]
	"'for example'" [node_type=Process shape=box]
	".*\the /proc / net / dev file" [node_type=File shape=ellipse]
	"'for example'" -> ".*\the /proc / net / dev file" [label="272: exec"]
	"'for example'" [node_type=Process shape=box]
	"'as the network speed'" [node_type=Process shape=box]
	"'for example'" -> "'as the network speed'" [label="273: fork"]
	"'for example'" [node_type=Process shape=box]
	".*\as the network speed" [node_type=File shape=ellipse]
	"'for example'" -> ".*\as the network speed" [label="273: exec"]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'the /proc / net / dev file'" -> "'the /proc / net / dev file'" [label="274: fork"]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	".*\the /proc / net / dev file" [node_type=File shape=ellipse]
	"'the /proc / net / dev file'" -> ".*\the /proc / net / dev file" [label="274: exec"]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	"'as the network speed'" [node_type=Process shape=box]
	"'the /proc / net / dev file'" -> "'as the network speed'" [label="275: fork"]
	"'the /proc / net / dev file'" [node_type=Process shape=box]
	".*\as the network speed" [node_type=File shape=ellipse]
	"'the /proc / net / dev file'" -> ".*\as the network speed" [label="275: exec"]
	"'srandom is seeded with time â\x80\x94 we pass the first parameter â\x80\x980â\x80\x99 into time as we have no structure to fill ( usually , a pointer to time_t would be passed into this function )'" [node_type=file shape=ellipse]
	"'In the subroutine'" [node_type=file shape=ellipse]
	"In the subroutine" -> "srandom is seeded with time â\x80\x94 we pass the first parameter â\x80\x980â\x80\x99 into time as we have no structure to fill ( usually , a pointer to time_t would be passed into this function )" [label="278: see"]
	"'srandom is seeded with time â\x80\x94 we pass the first parameter â\x80\x980â\x80\x99 into time as we have no structure to fill ( usually , a pointer to time_t would be passed into this function )'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "srandom is seeded with time â\x80\x94 we pass the first parameter â\x80\x980â\x80\x99 into time as we have no structure to fill ( usually , a pointer to time_t would be passed into this function )" [label="279: see"]
	"'with time'" [node_type=file shape=ellipse]
	"'srandom'" [node_type=file shape=ellipse]
	srandom -> "with time" [label="280: seed"]
	"'the first parameter â\x80\x980â\x80\x99 into time'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "the first parameter â\x80\x980â\x80\x99 into time" [label="281: pass"]
	"'as we have no structure to fill'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "as we have no structure to fill" [label="282: pass"]
	"'no structure to fill'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "no structure to fill" [label="283: have"]
	"'into this function'" [node_type=file shape=ellipse]
	"'a pointer to time_t'" [node_type=file shape=ellipse]
	"a pointer to time_t" -> "into this function" [label="284: pass"]
	"'the result of time'" [shape=diamond]
	"'we'" [shape=box]
	"'we'" -> "'the result of time'" [label="285: send"]
	"'into r3'" [shape=diamond]
	"'we'" [shape=box]
	"'we'" -> "'into r3'" [label="286: send"]
	"'a parameter for srandom'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "a parameter for srandom" [label="287: be"]
	"'most likely the compiler being strange for some reason or another'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "most likely the compiler being strange for some reason or another" [label="288: be"]
	"'strange'" [node_type=file shape=ellipse]
	"'the compiler'" [node_type=file shape=ellipse]
	"the compiler" -> strange [label="289: be"]
	"'for some reason or another'" [node_type=file shape=ellipse]
	"'the compiler'" [node_type=file shape=ellipse]
	"the compiler" -> "for some reason or another" [label="290: be"]
	"'by this call'" [node_type=file shape=ellipse]
	"'The value'" [node_type=file shape=ellipse]
	"The value" -> "by this call" [label="291: generate"]
	"'The value generated by this call'" [node_type=Process shape=box]
	"'in a sprintf statement'" [node_type=Process shape=box]
	"'The value generated by this call'" -> "'in a sprintf statement'" [label="292: fork"]
	"'The value generated by this call'" [node_type=Process shape=box]
	".*\in a sprintf statement" [node_type=File shape=ellipse]
	"'The value generated by this call'" -> ".*\in a sprintf statement" [label="292: exec"]
	"'The value generated by this call'" [node_type=Process shape=box]
	"'to create a string which represents the network speed in mega bytes per second ( apparently )'" [node_type=Process shape=box]
	"'The value generated by this call'" -> "'to create a string which represents the network speed in mega bytes per second ( apparently )'" [label="293: fork"]
	"'The value generated by this call'" [node_type=Process shape=box]
	".*\to create a string which represents the network speed in mega bytes per second ( apparently )" [node_type=File shape=ellipse]
	"'The value generated by this call'" -> ".*\to create a string which represents the network speed in mega bytes per second ( apparently )" [label="293: exec"]
	"'the network speed in mega bytes per second ( apparently )'" [node_type=file shape=ellipse]
	"'a string'" [node_type=file shape=ellipse]
	"a string" -> "the network speed in mega bytes per second ( apparently )" [label="294: represent"]
	"'super weird'" [node_type=file shape=ellipse]
	"'This'" [node_type=file shape=ellipse]
	This -> "super weird" [label="295: be"]
	"'a fake network speed'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=Process shape=box]
	"'the malware'" -> "'a fake network speed'" [label="296: write"]
	"'for some reason'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=Process shape=box]
	"'the malware'" -> "'for some reason'" [label="297: write"]
	"'regarding this'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> "regarding this" [label="298: come"]
	"'that someone has hired a programmer and a programmer have failed to implement this feature â\x80\x94 so theyâ\x80\x99re faking â\x80\x94 to a programmer client / boss etc'" [node_type=file shape=ellipse]
	"'the only conclusion I can come to regarding this'" [node_type=file shape=ellipse]
	"the only conclusion I can come to regarding this" -> "that someone has hired a programmer and a programmer have failed to implement this feature â\x80\x94 so theyâ\x80\x99re faking â\x80\x94 to a programmer client / boss etc" [label="299: be"]
	"'to implement this feature'" [node_type=file shape=ellipse]
	"'a programmer and a programmer'" [node_type=file shape=ellipse]
	"a programmer and a programmer" -> "to implement this feature" [label="300: fail"]
	"'this feature'" [node_type=file shape=ellipse]
	"'a programmer and a programmer'" [node_type=file shape=ellipse]
	"a programmer and a programmer" -> "this feature" [label="301: implement"]
	"'within this subroutine'" [shape=diamond]
	"'These values'" [shape=box]
	"'These values'" -> "'within this subroutine'" [label="302: send"]
	"'to the main remote ip'" [shape=diamond]
	"'These values'" [shape=box]
	"'These values'" -> "'to the main remote ip'" [label="303: send"]
	"'to the main core of the bot ; the part where the main core of the bot connects to the remote ip : * and receives commands'" [node_type=file shape=ellipse]
	"'Communication'" [node_type=file shape=ellipse]
	Communication -> "to the main core of the bot ; the part where the main core of the bot connects to the remote ip ":" * and receives commands" [label="304: come"]
	"'to the main core of the bot ; the part where the main core of the bot connects to the remote ip : * and receives commands'" [node_type=file shape=ellipse]
	"'After all of these operations'" [node_type=file shape=ellipse]
	"After all of these operations" -> "to the main core of the bot ; the part where the main core of the bot connects to the remote ip ":" * and receives commands" [label="305: come"]
	"'to the main core of the bot ; the part where the main core of the bot connects to the remote ip : * and receives commands'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "to the main core of the bot ; the part where the main core of the bot connects to the remote ip ":" * and receives commands" [label="306: come"]
	"'to the main core of the bot ; the part where the main core of the bot connects to the remote ip : * and receives commands'" [node_type=file shape=ellipse]
	"'finally'" [node_type=file shape=ellipse]
	finally -> "to the main core of the bot ; the part where the main core of the bot connects to the remote ip ":" * and receives commands" [label="307: come"]
	"'commands'" [node_type=file shape=diamond]
	"'the part'" [node_type=Process shape=box]
	"'commands'" -> "'the part'" [label="308: receive"]
	"'commands'" [node_type=file shape=diamond]
	"'where'" [node_type=Process shape=box]
	"'commands'" -> "'where'" [label="309: receive"]
	"'commands'" [node_type=file shape=diamond]
	"'the main core of the bot'" [node_type=Process shape=box]
	"'commands'" -> "'the main core of the bot'" [label="310: receive"]
	"'at 0xCA1C'" [node_type=file shape=ellipse]
	"'The procedure ConnectServer'" [node_type=file shape=ellipse]
	"The procedure ConnectServer" -> "at 0xCA1C" [label="311: be"]
	"'The procedure ConnectServer ( which is at 0xCA1C )'" [node_type=Process shape=box]
	"'from the main body of the function'" [node_type=Process shape=box]
	"'The procedure ConnectServer ( which is at 0xCA1C )'" -> "'from the main body of the function'" [label="312: fork"]
	"'The procedure ConnectServer ( which is at 0xCA1C )'" [node_type=Process shape=box]
	".*\from the main body of the function" [node_type=File shape=ellipse]
	"'The procedure ConnectServer ( which is at 0xCA1C )'" -> ".*\from the main body of the function" [label="312: exec"]
	"'to ServerConnectCli ( 0xB5BC ) which returns a socket to the remote'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "to ServerConnectCli ( 0xB5BC ) which returns a socket to the remote" [label="313: branch"]
	"'a socket'" [node_type=file shape=ellipse]
	"'ServerConnectCli ( 0xB5BC )'" [node_type=file shape=ellipse]
	"ServerConnectCli ( 0xB5BC )" -> "a socket" [label="314: return"]
	"'to the remote'" [node_type=file shape=ellipse]
	"'ServerConnectCli ( 0xB5BC )'" [node_type=file shape=ellipse]
	"ServerConnectCli ( 0xB5BC )" -> "to the remote" [label="315: return"]
	"'The global variable MainSocket'" [node_type=Process shape=box]
	"'to this value'" [node_type=Process shape=box]
	"'The global variable MainSocket'" -> "'to this value'" [label="316: fork"]
	"'by creating a socket of protocol type TCP'" [node_type=file shape=ellipse]
	"'ServerConnectCli'" [node_type=file shape=ellipse]
	ServerConnectCli -> "by creating a socket of protocol type TCP" [label="317: start"]
	"'a socket of protocol type TCP'" [node_type=file shape=ellipse]
	"'ServerConnectCli'" [node_type=Process shape=box]
	"'ServerConnectCli'" -> "'a socket of protocol type TCP'" [label="318: write"]
	"'to a subroutine at 0xB654 which displays the error by calling the perror ( .. ) function to display a human readable error'" [node_type=file shape=ellipse]
	"'if this operation is not successful'" [node_type=file shape=ellipse]
	"if this operation is not successful" -> "to a subroutine at 0xB654 which displays the error by calling the perror ( .. ) function to display a human readable error" [label="319: branch"]
	"'to a subroutine at 0xB654 which displays the error by calling the perror ( .. ) function to display a human readable error'" [node_type=file shape=ellipse]
	"'the assembly'" [node_type=file shape=ellipse]
	"the assembly" -> "to a subroutine at 0xB654 which displays the error by calling the perror ( .. ) function to display a human readable error" [label="320: branch"]
	"'the error'" [node_type=file shape=ellipse]
	"'a subroutine'" [node_type=file shape=ellipse]
	"a subroutine" -> "the error" [label="321: display"]
	"'by calling the perror ( .. ) function to display a human readable error'" [node_type=file shape=ellipse]
	"'a subroutine'" [node_type=file shape=ellipse]
	"a subroutine" -> "by calling the perror ( .. ) function to display a human readable error" [label="322: display"]
	"'to display a human readable error'" [node_type=file shape=ellipse]
	"'which'" [node_type=file shape=ellipse]
	which -> "to display a human readable error" [label="323: function"]
	"'a human readable error'" [node_type=file shape=ellipse]
	"'which'" [node_type=file shape=ellipse]
	which -> "a human readable error" [label="324: display"]
	"'like doing : r0 = socket(AF_INET , SOCK_STREAM , IPPROTO_TCP ) ; The author to partly obfuscated the port we are going that to connect'" [node_type=file shape=ellipse]
	"'For those of you familiar with C'" [node_type=file shape=ellipse]
	"For those of you familiar with C" -> "like doing ":" r0 = socket(AF_INET , SOCK_STREAM , IPPROTO_TCP ) ; The author to partly obfuscated the port we are going that to connect" [label="325: be"]
	"'like doing : r0 = socket(AF_INET , SOCK_STREAM , IPPROTO_TCP ) ; The author to partly obfuscated the port we are going that to connect'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "like doing ":" r0 = socket(AF_INET , SOCK_STREAM , IPPROTO_TCP ) ; The author to partly obfuscated the port we are going that to connect" [label="326: be"]
	"'the port we are going that to connect'" [node_type=file shape=ellipse]
	"'The author'" [node_type=file shape=ellipse]
	"The author" -> "the port we are going that to connect" [label="327: obfuscate"]
	"'the port we are going that to connect'" [node_type=file shape=ellipse]
	"'partly'" [node_type=file shape=ellipse]
	partly -> "the port we are going that to connect" [label="328: obfuscate"]
	"'into the register r3'" [node_type=file shape=ellipse]
	"'The original number'" [node_type=Process shape=box]
	"'into the register r3'" -> "'The original number'" [label="329: 'load'"]
	"'this value'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "this value" [label="330: shift"]
	"'by 16 bytes ( 0x10 ) to the left'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "by 16 bytes ( 0x10 ) to the left" [label="331: shift"]
	"'this being done in the lsl instruction'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "this being done in the lsl instruction" [label="333: see"]
	"'in the lsl instruction'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "in the lsl instruction" [label="334: do"]
	"'to the right by 16 bytes'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "to the right by 16 bytes" [label="335: be"]
	"'this'" [node_type=file shape=ellipse]
	"'The compiler'" [node_type=file shape=ellipse]
	"The compiler" -> this [label="336: put"]
	"'there'" [node_type=file shape=ellipse]
	"'The compiler'" [node_type=file shape=ellipse]
	"The compiler" -> there [label="337: put"]
	"'the assembly'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> "the assembly" [label="338: put"]
	"'down below'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> "down below" [label="339: put"]
	"'so you can see clearly what s happening'" [node_type=file shape=ellipse]
	"'I'" [node_type=file shape=ellipse]
	I -> "so you can see clearly what s happening" [label="340: put"]
	"'clearly'" [node_type=file shape=ellipse]
	"'you'" [node_type=file shape=ellipse]
	you -> clearly [label="341: see"]
	"'what s happening'" [node_type=file shape=ellipse]
	"'you'" [node_type=file shape=ellipse]
	you -> "what s happening" [label="342: see"]
	"'a symbol named AnalysisAddress'" [node_type=file shape=ellipse]
	"'the bot'" [node_type=file shape=ellipse]
	"the bot" -> "a symbol named AnalysisAddress" [label="343: have"]
	"'at at 0xB1B8'" [node_type=file shape=ellipse]
	"'the bot'" [node_type=file shape=ellipse]
	"the bot" -> "at at 0xB1B8" [label="344: have"]
	"'AnalysisAddress'" [node_type=file shape=ellipse]
	"'a symbol'" [node_type=file shape=ellipse]
	"a symbol" -> AnalysisAddress [label="345: name"]
	"'at at 0xB1B8'" [node_type=file shape=ellipse]
	"'a symbol'" [node_type=file shape=ellipse]
	"a symbol" -> "at at 0xB1B8" [label="346: name"]
	"'this is to divert the attention of researchers'" [node_type=file shape=ellipse]
	"'at first sight'" [node_type=file shape=ellipse]
	"at first sight" -> "this is to divert the attention of researchers" [label="347: think"]
	"'this is to divert the attention of researchers'" [node_type=file shape=ellipse]
	"'one'" [node_type=file shape=ellipse]
	one -> "this is to divert the attention of researchers" [label="348: think"]
	"'to divert the attention of researchers'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "to divert the attention of researchers" [label="349: be"]
	"'setup a hostent struct ( http://man7.org/linux/man-pages/man3/gethostbyname.3.html ) which weâ\x80\x99ll use later on for the connection'" [node_type=file shape=ellipse]
	"'all this subroutine'" [node_type=file shape=ellipse]
	"all this subroutine" -> "setup a hostent struct ( http":"//man7.org/linux/man-pages/man3/gethostbyname.3.html ) which weâ\x80\x99ll use later on for the connection" [label="350: be"]
	"'in the first parameter in the register'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "in the first parameter in the register" [label="351: pass"]
	"'from the location 0xC1FC8 which has the value of 61.147.91.53'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "from the location 0xC1FC8 which has the value of 61.147.91.53" [label="352: pass"]
	"'the value of 61.147.91.53'" [node_type=file shape=ellipse]
	"'the location'" [node_type=file shape=ellipse]
	"the location" -> "the value of 61.147.91.53" [label="353: have"]
	"'the return value os gethostbyname'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "the return value os gethostbyname" [label="354: put"]
	"'into register r3'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "into register r3" [label="355: put"]
	"'gethostbyname'" [node_type=file shape=ellipse]
	"'the return value'" [node_type=file shape=ellipse]
	"the return value" -> gethostbyname [label="357: os"]
	"'into register r3'" [node_type=file shape=ellipse]
	"'the return value'" [node_type=file shape=ellipse]
	"the return value" -> "into register r3" [label="358: os"]
	"'some arithmetic'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "some arithmetic" [label="359: preform"]
	"'on os gethostbyname'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "on os gethostbyname" [label="360: preform"]
	"'two calls to setsockopt'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "two calls to setsockopt" [label="361: do"]
	"'passing'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> passing [label="362: do"]
	"'the IP_DROP_SOURCE_MEMBERSHIP flag'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "the IP_DROP_SOURCE_MEMBERSHIP flag" [label="363: pass"]
	"'the malware'" [node_type=file shape=ellipse]
	"'the'" [node_type=file shape=ellipse]
	the -> "the malware" [label="366: complete"]
	"'the malware'" [node_type=file shape=ellipse]
	"'After the above'" [node_type=file shape=ellipse]
	"After the above" -> "the malware" [label="367: complete"]
	"'a call to connect to make an initial connection to the remote ip'" [node_type=file shape=ellipse]
	"'the After the above has completed'" [node_type=file shape=ellipse]
	"the After the above has completed" -> "a call to connect to make an initial connection to the remote ip" [label="368: do"]
	"'a call to connect to make an initial connection to the remote ip'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "a call to connect to make an initial connection to the remote ip" [label="369: do"]
	"'a mixture of select and getsockopt calls'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "a mixture of select and getsockopt calls" [label="370: do"]
	"'on the socket'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "on the socket" [label="371: do"]
	"'to ensure that the non - blocking socket has successfully connected'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "to ensure that the non - blocking socket has successfully connected" [label="372: do"]
	"'the socket'" [node_type=file shape=ellipse]
	"'If the connection is not successful'" [node_type=file shape=ellipse]
	"If the connection is not successful" -> "the socket" [label="373: close"]
	"'the socket'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "the socket" [label="374: close"]
	"'a working socket returned from ServerConnectCli ( 0xB5BC )'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "a working socket returned from ServerConnectCli ( 0xB5BC )" [label="375: have"]
	"'from ServerConnectCli ( 0xB5BC )'" [node_type=file shape=ellipse]
	"'a working socket'" [node_type=file shape=ellipse]
	"a working socket" -> "from ServerConnectCli ( 0xB5BC )" [label="376: return"]
	"'Once we have a working socket returned from ServerConnectCli ( 0xB5BC )'" [node_type=Process shape=box]
	"'the value of the global variable MainSocket'" [node_type=Process shape=box]
	"'Once we have a working socket returned from ServerConnectCli ( 0xB5BC )'" -> "'the value of the global variable MainSocket'" [label="377: fork"]
	"'Once we have a working socket returned from ServerConnectCli ( 0xB5BC )'" [node_type=Process shape=box]
	"'to the return value'" [node_type=Process shape=box]
	"'Once we have a working socket returned from ServerConnectCli ( 0xB5BC )'" -> "'to the return value'" [label="378: fork"]
	"'we'" [node_type=Process shape=box]
	"'the value of the global variable MainSocket'" [node_type=Process shape=box]
	"'we'" -> "'the value of the global variable MainSocket'" [label="379: fork"]
	"'we'" [node_type=Process shape=box]
	"'to the return value'" [node_type=Process shape=box]
	"'we'" -> "'to the return value'" [label="380: fork"]
	"'to getting more statistics from the infected box'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "to getting more statistics from the infected box" [label="383: go"]
	"'more statistics'" [node_type=file shape=diamond]
	"'the malware'" [node_type=Process shape=box]
	"'more statistics'" -> "'the malware'" [label="384: receive"]
	"'from the infected box'" [node_type=file shape=diamond]
	"'the malware'" [node_type=Process shape=box]
	"'from the infected box'" -> "'the malware'" [label="385: receive"]
	"'the username'" [node_type=file shape=ellipse]
	"'First of all'" [node_type=file shape=ellipse]
	"First of all" -> "the username" [label="386: grab"]
	"'from the user running the executable which is placed into'" [node_type=file shape=ellipse]
	"'First of all'" [node_type=file shape=ellipse]
	"First of all" -> "from the user running the executable which is placed into" [label="387: grab"]
	"'the username'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "the username" [label="388: grab"]
	"'from the user running the executable which is placed into'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "from the user running the executable which is placed into" [label="389: grab"]
	"'the user'" [node_type=Process shape=box]
	"'the executable'" [node_type=Process shape=box]
	"'the user'" -> "'the executable'" [label="390: fork"]
	"'the user'" [node_type=Process shape=box]
	".*\the executable" [node_type=File shape=ellipse]
	"'the user'" -> ".*\the executable" [label="390: exec"]
	"'into'" [node_type=file shape=ellipse]
	"'the executable'" [node_type=Process shape=box]
	"'the executable'" -> "'into'" [label="391: write"]
	"'that if the â\x80\x98unameâ\x80\x99 call fails then â\x80\x9cUnknownâ\x80\x9d will be copied into the destination buffer which originally resided in r11 , else if it is successful , will branch to'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "that if the â\x80\x98unameâ\x80\x99 call fails then â\x80\x9cUnknownâ\x80\x9d will be copied into the destination buffer which originally resided in r11 , else if it is successful , will branch to" [label="392: see"]
	"'into the destination buffer which originally resided in r11 , else if it is successful'" [node_type=file shape=ellipse]
	"'if the â\x80\x98unameâ\x80\x99 call fails then'" [node_type=Process shape=box]
	"'if the â\x80\x98unameâ\x80\x99 call fails then'" -> "'into the destination buffer which originally resided in r11 , else if it is successful'" [label="393: write"]
	"'into the destination buffer which originally resided in r11 , else if it is successful'" [node_type=file shape=ellipse]
	"'â\x80\x9cUnknownâ\x80\x9d'" [node_type=Process shape=box]
	"'â\x80\x9cUnknownâ\x80\x9d'" -> "'into the destination buffer which originally resided in r11 , else if it is successful'" [label="394: write"]
	"'in r11'" [node_type=file shape=ellipse]
	"'the destination buffer'" [node_type=file shape=ellipse]
	"the destination buffer" -> "in r11" [label="395: reside"]
	"'in r11'" [node_type=file shape=ellipse]
	"'originally'" [node_type=file shape=ellipse]
	originally -> "in r11" [label="396: reside"]
	"'successful'" [node_type=file shape=ellipse]
	"'it'" [node_type=file shape=ellipse]
	it -> successful [label="397: be"]
	"'branch'" [node_type=file shape=ellipse]
	"'if it is successful'" [node_type=file shape=ellipse]
	"if it is successful" -> branch [label="398: will"]
	"'to'" [node_type=file shape=ellipse]
	"'if it is successful'" [node_type=file shape=ellipse]
	"if it is successful" -> to [label="399: branch"]
	"'about the infected host'" [node_type=file shape=ellipse]
	"'More information'" [node_type=Process shape=box]
	"'about the infected host'" -> "'More information'" [label="400: 'read'"]
	"'via the GetCpuInfo function'" [node_type=file shape=ellipse]
	"'More information'" [node_type=Process shape=box]
	"'via the GetCpuInfo function'" -> "'More information'" [label="401: 'read'"]
	"'self explanatory'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "self explanatory" [label="402: be"]
	"'this is self explanatory Iâ\x80\x99ll anyways'" [node_type=file shape=ellipse]
	"'Although this is self explanatory'" [node_type=file shape=ellipse]
	"Although this is self explanatory" -> "this is self explanatory Iâ\x80\x99ll anyways" [label="403: explain"]
	"'this is self explanatory Iâ\x80\x99ll anyways'" [node_type=file shape=ellipse]
	"'Iâ\x80\x99ll'" [node_type=file shape=ellipse]
	"Iâ\x80\x99ll" -> "this is self explanatory Iâ\x80\x99ll anyways" [label="404: explain"]
	"'self explanatory Iâ\x80\x99ll'" [node_type=file shape=ellipse]
	"'Although this is self explanatory Iâ\x80\x99ll'" [node_type=file shape=ellipse]
	"Although this is self explanatory Iâ\x80\x99ll" -> "self explanatory Iâ\x80\x99ll" [label="405: be"]
	"'anyways'" [node_type=file shape=ellipse]
	"'Although this is self explanatory Iâ\x80\x99ll'" [node_type=file shape=ellipse]
	"Although this is self explanatory Iâ\x80\x99ll" -> anyways [label="406: be"]
	"'self explanatory Iâ\x80\x99ll'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "self explanatory Iâ\x80\x99ll" [label="407: be"]
	"'anyways'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> anyways [label="408: be"]
	"'The virtual file /proc / cpuinfo'" [node_type=Process shape=box]
	"'in WORDs'" [node_type=Process shape=box]
	"'The virtual file /proc / cpuinfo'" -> "'in WORDs'" [label="409: fork"]
	"'The virtual file /proc / cpuinfo'" [node_type=Process shape=box]
	".*\in WORDs" [node_type=File shape=ellipse]
	"'The virtual file /proc / cpuinfo'" -> ".*\in WORDs" [label="409: exec"]
	"'The virtual file /proc / cpuinfo'" [node_type=Process shape=box]
	"'until an EOF ( -1 ) is hit whilst reading the file chunk by chunk'" [node_type=Process shape=box]
	"'The virtual file /proc / cpuinfo'" -> "'until an EOF ( -1 ) is hit whilst reading the file chunk by chunk'" [label="410: fork"]
	"'The virtual file /proc / cpuinfo'" [node_type=Process shape=box]
	".*\until an EOF ( -1 ) is hit whilst reading the file chunk by chunk" [node_type=File shape=ellipse]
	"'The virtual file /proc / cpuinfo'" -> ".*\until an EOF ( -1 ) is hit whilst reading the file chunk by chunk" [label="410: exec"]
	"'in WORDs'" [node_type=file shape=ellipse]
	"'The virtual file /proc / cpuinfo'" [node_type=Process shape=box]
	"'in WORDs'" -> "'The virtual file /proc / cpuinfo'" [label="411: 'read'"]
	"'until an EOF ( -1 ) is hit whilst reading the file chunk by chunk â\x80\x94'" [node_type=file shape=ellipse]
	"'The virtual file /proc / cpuinfo'" [node_type=Process shape=box]
	"'until an EOF ( -1 ) is hit whilst reading the file chunk by chunk â\x80\x94'" -> "'The virtual file /proc / cpuinfo'" [label="412: 'read'"]
	"'whilst reading the file chunk by chunk'" [node_type=file shape=ellipse]
	"'an EOF ( -1 )'" [node_type=file shape=ellipse]
	"an EOF ( -1 )" -> "whilst reading the file chunk by chunk" [label="413: hit"]
	"'fclose'" [node_type=Process shape=box]
	"'to free up the opened file'" [node_type=Process shape=box]
	"'fclose'" -> "'to free up the opened file'" [label="414: fork"]
	"'fclose'" [node_type=Process shape=box]
	".*\to free up the opened file" [node_type=File shape=ellipse]
	"'fclose'" -> ".*\to free up the opened file" [label="414: exec"]
	"'the opened file'" [node_type=file shape=ellipse]
	"'The virtual file /proc / cpuinfo'" [node_type=file shape=ellipse]
	"The virtual file /proc / cpuinfo" -> "the opened file" [label="415: free"]
	"'back out'" [node_type=file shape=ellipse]
	"'The number of CPUs'" [node_type=file shape=ellipse]
	"The number of CPUs" -> "back out" [label="416: pass"]
	"'from this method and'" [node_type=file shape=ellipse]
	"'The number of CPUs'" [node_type=file shape=ellipse]
	"The number of CPUs" -> "from this method and" [label="417: pass"]
	"'the malware'" [node_type=Process shape=box]
	"'sysinfo'" [node_type=Process shape=box]
	"'the malware'" -> "'sysinfo'" [label="418: fork"]
	"'the malware'" [node_type=Process shape=box]
	".*\sysinfo" [node_type=File shape=ellipse]
	"'the malware'" -> ".*\sysinfo" [label="418: exec"]
	"'into the struct ( also named sysinfo ) which is originally located in r3'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=Process shape=box]
	"'into the struct ( also named sysinfo ) which is originally located in r3'" -> "'the malware'" [label="419: 'read'"]
	"'sysinfo'" [node_type=file shape=ellipse]
	"'the struct'" [node_type=file shape=ellipse]
	"the struct" -> sysinfo [label="420: name"]
	"'in r3'" [node_type=file shape=ellipse]
	"'the struct ( also named sysinfo'" [node_type=Process shape=box]
	"'in r3'" -> "'the struct ( also named sysinfo'" [label="421: 'read'"]
	"'in r3'" [node_type=file shape=ellipse]
	"'originally'" [node_type=Process shape=box]
	"'in r3'" -> "'originally'" [label="422: 'read'"]
	"'several members of this struct , such as the total amount of swap , total amount of RAM etc .. this is all then formatted and output into a string'" [node_type=file shape=ellipse]
	"'We'" [node_type=Process shape=box]
	"'several members of this struct , such as the total amount of swap , total amount of RAM etc .. this is all then formatted and output into a string'" -> "'We'" [label="423: 'read'"]
	"'into a string'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "into a string" [label="424: format"]
	"'here'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> here [label="425: see"]
	"\"that the threat actor seems to be joking about by using the string â\x80\x98Hackerâ\x80\x99 .. the string to be format is : VERSONEX : Linux-%s|%d|%d MHz|%dMB|%dMB|%s â\x80\x94 youâ\x80\x99ve spelt ' version ' wrong Mr Threat Actor\"" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "\"that the threat actor seems to be joking about by using the string â\x80\x98Hackerâ\x80\x99 .. the string to be format is ":" VERSONEX ": Linux-%s|%d|%d MHz|%dMB|%dMB|%s â\x80\x94 youâ\x80\x99ve spelt  version  wrong Mr Threat Actor" [label="426: see"]
	"'to be joking about by using the string â\x80\x98Hackerâ\x80\x99'" [node_type=file shape=ellipse]
	"'the threat'" [node_type=file shape=ellipse]
	"the threat" -> "to be joking about by using the string â\x80\x98Hackerâ\x80\x99" [label="427: seem"]
	"'about'" [node_type=file shape=ellipse]
	"'the threat actor'" [node_type=file shape=ellipse]
	"the threat actor" -> about [label="428: joke"]
	"'by using the string'" [node_type=file shape=ellipse]
	"'the threat actor'" [node_type=file shape=ellipse]
	"the threat actor" -> "by using the string" [label="429: joke"]
	"'the threat actor'" [node_type=Process shape=box]
	"'the string â\x80\x98Hackerâ\x80\x99'" [node_type=Process shape=box]
	"'the threat actor'" -> "'the string â\x80\x98Hackerâ\x80\x99'" [label="430: fork"]
	"'the threat actor'" [node_type=Process shape=box]
	".*\the string âHackerâ" [node_type=File shape=ellipse]
	"'the threat actor'" -> ".*\the string âHackerâ" [label="430: exec"]
	"'format'" [node_type=file shape=ellipse]
	"'the string'" [node_type=file shape=ellipse]
	"the string" -> format [label="431: be"]
	"\"VERSONEX : Linux-%s|%d|%d MHz|%dMB|%dMB|%s â\x80\x94 youâ\x80\x99ve spelt ' version ' wrong Mr Threat Actor\"" [node_type=file shape=ellipse]
	"'the string to be format'" [node_type=file shape=ellipse]
	"the string to be format" -> "\"VERSONEX ":" Linux-%s|%d|%d MHz|%dMB|%dMB|%s â\x80\x94 youâ\x80\x99ve spelt  version  wrong Mr Threat Actor\"" [label="432: be"]
	"\"version ' wrong\"" [node_type=file shape=ellipse]
	"'youâ\x80\x99ve'" [node_type=file shape=ellipse]
	"youâ\x80\x99ve" -> "\"version  wrong\"" [label="433: spell"]
	"'sprintf'" [node_type=Process shape=box]
	"'before'" [node_type=Process shape=box]
	"'sprintf'" -> "'before'" [label="434: fork"]
	"'sprintf'" [node_type=Process shape=box]
	".*\before" [node_type=File shape=ellipse]
	"'sprintf'" -> ".*\before" [label="434: exec"]
	"'buffer overflows / format string exploits'" [node_type=file shape=ellipse]
	"'which'" [node_type=file shape=ellipse]
	which -> "buffer overflows / format string exploits" [label="435: mitigate"]
	"'to an extent as the function knows the length of the buffer'" [node_type=file shape=ellipse]
	"'which'" [node_type=file shape=ellipse]
	which -> "to an extent as the function knows the length of the buffer" [label="436: mitigate"]
	"'the length of the buffer'" [node_type=file shape=ellipse]
	"'the function'" [node_type=file shape=ellipse]
	"the function" -> "the length of the buffer" [label="438: know"]
	"'inclined to use one naturally over the other'" [node_type=file shape=ellipse]
	"'Programmers'" [node_type=file shape=ellipse]
	Programmers -> "inclined to use one naturally over the other" [label="439: be"]
	"'to use one naturally over the other'" [node_type=file shape=ellipse]
	"'Programmers'" [node_type=file shape=ellipse]
	Programmers -> "to use one naturally over the other" [label="440: incline"]
	"'Programmers'" [node_type=Process shape=box]
	"'one'" [node_type=Process shape=box]
	"'Programmers'" -> "'one'" [label="441: fork"]
	"'Programmers'" [node_type=Process shape=box]
	".*\one" [node_type=File shape=ellipse]
	"'Programmers'" -> ".*\one" [label="441: exec"]
	"'Programmers'" [node_type=Process shape=box]
	"'naturally'" [node_type=Process shape=box]
	"'Programmers'" -> "'naturally'" [label="442: fork"]
	"'Programmers'" [node_type=Process shape=box]
	".*\naturally" [node_type=File shape=ellipse]
	"'Programmers'" -> ".*\naturally" [label="442: exec"]
	"'Programmers'" [node_type=Process shape=box]
	"'over the other'" [node_type=Process shape=box]
	"'Programmers'" -> "'over the other'" [label="443: fork"]
	"'Programmers'" [node_type=Process shape=box]
	".*\over the other" [node_type=File shape=ellipse]
	"'Programmers'" -> ".*\over the other" [label="443: exec"]
	"'to myself'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "to myself" [label="444: indicate"]
	"'there may be more than one programmer whom is contributing to this malware'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "there may be more than one programmer whom is contributing to this malware" [label="445: indicate"]
	"'to this malware'" [node_type=file shape=ellipse]
	"'more than one programmer'" [node_type=file shape=ellipse]
	"more than one programmer" -> "to this malware" [label="446: contribute"]
	"'to this malware'" [node_type=file shape=ellipse]
	"'whom'" [node_type=file shape=ellipse]
	whom -> "to this malware" [label="447: contribute"]
	"'that we try to then send this information on â\x80\x98MainSocketâ\x80\x99 , if the send is not successful ( so , if we send 0 ) we branch to another subroutine and close the socket'" [node_type=file shape=ellipse]
	"'In the control flow'" [node_type=file shape=ellipse]
	"In the control flow" -> "that we try to then send this information on â\x80\x98MainSocketâ\x80\x99 , if the send is not successful ( so , if we send 0 ) we branch to another subroutine and close the socket" [label="448: see"]
	"'that we try to then send this information on â\x80\x98MainSocketâ\x80\x99 , if the send is not successful ( so , if we send 0 ) we branch to another subroutine and close the socket'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "that we try to then send this information on â\x80\x98MainSocketâ\x80\x99 , if the send is not successful ( so , if we send 0 ) we branch to another subroutine and close the socket" [label="449: see"]
	"'to then send this information on â\x80\x98MainSocketâ\x80\x99'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "to then send this information on â\x80\x98MainSocketâ\x80\x99" [label="450: try"]
	"'this information'" [shape=diamond]
	"'we'" [shape=box]
	"'we'" -> "'this information'" [label="451: send"]
	"'on â\x80\x98MainSocketâ\x80\x99'" [shape=diamond]
	"'we'" [shape=box]
	"'we'" -> "'on â\x80\x98MainSocketâ\x80\x99'" [label="452: send"]
	"'0'" [shape=diamond]
	"'we'" [shape=box]
	"'we'" -> "'0'" [label="453: send"]
	"'to another subroutine'" [node_type=file shape=ellipse]
	"'so'" [node_type=file shape=ellipse]
	so -> "to another subroutine" [label="457: branch"]
	"'to another subroutine'" [node_type=file shape=ellipse]
	"'if we send 0'" [node_type=file shape=ellipse]
	"if we send 0" -> "to another subroutine" [label="458: branch"]
	"'to another subroutine'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "to another subroutine" [label="459: branch"]
	"'the socket'" [node_type=file shape=ellipse]
	"'so'" [node_type=file shape=ellipse]
	so -> "the socket" [label="462: close"]
	"'the socket'" [node_type=file shape=ellipse]
	"'if we send 0'" [node_type=file shape=ellipse]
	"if we send 0" -> "the socket" [label="463: close"]
	"'the socket'" [node_type=file shape=ellipse]
	"'we'" [node_type=file shape=ellipse]
	we -> "the socket" [label="464: close"]
	"'if the flag is set that the flag are equal then jump to address 0xCBD4'" [node_type=file shape=ellipse]
	"'For those not familiar with ARM'" [node_type=file shape=ellipse]
	"For those not familiar with ARM" -> "if the flag is set that the flag are equal then jump to address 0xCBD4" [label="469: say"]
	"'if the flag is set that the flag are equal then jump to address 0xCBD4'" [node_type=file shape=ellipse]
	"'the beq instruction'" [node_type=file shape=ellipse]
	"the beq instruction" -> "if the flag is set that the flag are equal then jump to address 0xCBD4" [label="470: say"]
	"'if the flag is set that the flag are equal then jump to address 0xCBD4'" [node_type=file shape=ellipse]
	"'basically'" [node_type=file shape=ellipse]
	basically -> "if the flag is set that the flag are equal then jump to address 0xCBD4" [label="471: say"]
	"'equal'" [node_type=file shape=ellipse]
	"'the flag'" [node_type=file shape=ellipse]
	"the flag" -> equal [label="472: be"]
	"'to address 0xCBD4'" [node_type=file shape=ellipse]
	"'if the flag is set that the flag are equal'" [node_type=file shape=ellipse]
	"if the flag is set that the flag are equal" -> "to address 0xCBD4" [label="473: jump"]
	"'the socket'" [node_type=file shape=ellipse]
	"'this subroutine'" [node_type=file shape=ellipse]
	"this subroutine" -> "the socket" [label="477: close"]
	"'as said before'" [node_type=file shape=ellipse]
	"'this subroutine'" [node_type=file shape=ellipse]
	"this subroutine" -> "as said before" [label="478: close"]
	"'the socket'" [node_type=file shape=ellipse]
	"'simply'" [node_type=file shape=ellipse]
	simply -> "the socket" [label="479: close"]
	"'as said before'" [node_type=file shape=ellipse]
	"'simply'" [node_type=file shape=ellipse]
	simply -> "as said before" [label="480: close"]
	"'onto select'" [shape=diamond]
	"'We'" [shape=box]
	"'We'" -> "'onto select'" [label="481: send"]
	"'if this call is successful'" [shape=diamond]
	"'We'" [shape=box]
	"'We'" -> "'if this call is successful'" [label="482: send"]
	"'successful'" [node_type=file shape=ellipse]
	"'this call'" [node_type=file shape=ellipse]
	"this call" -> successful [label="483: be"]
	"'data'" [node_type=file shape=ellipse]
	"'We'" [node_type=Process shape=box]
	"'data'" -> "'We'" [label="484: 'read'"]
	"'from the remote'" [node_type=file shape=ellipse]
	"'We'" [node_type=Process shape=box]
	"'from the remote'" -> "'We'" [label="485: 'read'"]
	"'data from the remote ip'" [node_type=file shape=ellipse]
	"'We'" [node_type=Process shape=box]
	"'data from the remote ip'" -> "'We'" [label="486: 'read'"]
	"'the buffer that We are using'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "the buffer that We are using" [label="487: zero"]
	"'to receive'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "to receive" [label="489: want"]
	"'an error message'" [node_type=file shape=ellipse]
	"'if this is not successful this is not successful'" [node_type=file shape=ellipse]
	"if this is not successful this is not successful" -> "an error message" [label="491: print"]
	"'the socket'" [node_type=file shape=ellipse]
	"'a subroutine'" [node_type=file shape=ellipse]
	"a subroutine" -> "the socket" [label="492: close"]
	"'by more than one author'" [node_type=file shape=ellipse]
	"'the malware'" [node_type=file shape=ellipse]
	"the malware" -> "by more than one author" [label="493: program"]
	"'so far'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "so far" [label="494: see"]
	"'that more than one author has experience in socket programming'" [node_type=file shape=ellipse]
	"'We'" [node_type=file shape=ellipse]
	We -> "that more than one author has experience in socket programming" [label="495: see"]
	"'experience in socket programming'" [node_type=file shape=ellipse]
	"'more than one author'" [node_type=file shape=ellipse]
	"more than one author" -> "experience in socket programming" [label="496: have"]
	"'more than one author'" [node_type=Process shape=box]
	"'pascal case ( LikeThis )'" [node_type=Process shape=box]
	"'more than one author'" -> "'pascal case ( LikeThis )'" [label="497: fork"]
	"'more than one author'" [node_type=Process shape=box]
	".*\pascal case ( LikeThis )" [node_type=File shape=ellipse]
	"'more than one author'" -> ".*\pascal case ( LikeThis )" [label="497: exec"]
	"'certain functions such as GetCpuInfo'" [node_type=file shape=ellipse]
	"'more than one author'" [node_type=file shape=ellipse]
	"more than one author" -> "certain functions such as GetCpuInfo" [label="498: name"]
	"'to We'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "to We" [label="502: indicate"]
	"'that more than one author is used to programming on Windows'" [node_type=file shape=ellipse]
	"'this'" [node_type=file shape=ellipse]
	this -> "that more than one author is used to programming on Windows" [label="503: indicate"]
	"'to We'" [node_type=file shape=ellipse]
	"'in turn'" [node_type=file shape=ellipse]
	"in turn" -> "to We" [label="504: indicate"]
	"'that more than one author is used to programming on Windows'" [node_type=file shape=ellipse]
	"'in turn'" [node_type=file shape=ellipse]
	"in turn" -> "that more than one author is used to programming on Windows" [label="505: indicate"]
	"'more than one author'" [node_type=Process shape=box]
	"'to programming on Windows'" [node_type=Process shape=box]
	"'more than one author'" -> "'to programming on Windows'" [label="506: fork"]
	"'more than one author'" [node_type=Process shape=box]
	".*\to programming on Windows" [node_type=File shape=ellipse]
	"'more than one author'" -> ".*\to programming on Windows" [label="506: exec"]
	"'on Windows'" [node_type=file shape=ellipse]
	"'more than one author'" [node_type=file shape=ellipse]
	"more than one author" -> "on Windows" [label="507: program"]
	"'the end of this section'" [node_type=file shape=ellipse]
	"'This'" [node_type=file shape=ellipse]
	This -> "the end of this section" [label="508: be"]
	"'onto the details about the attack methods and what else the bot can be commanded to do'" [shape=diamond]
	"'We'" [shape=box]
	"'We'" -> "'onto the details about the attack methods and what else the bot can be commanded to do'" [label="509: send"]
	"'onto the details about the attack methods and what else the bot can be commanded to do'" [shape=diamond]
	"'now'" [shape=box]
	"'now'" -> "'onto the details about the attack methods and what else the bot can be commanded to do'" [label="510: send"]
	"'to do'" [node_type=file shape=ellipse]
	"'the bot'" [node_type=file shape=ellipse]
	"the bot" -> "to do" [label="511: command"]
}
